---
description: 
globs: 
alwaysApply: true
---
# 组件开发指南

## 组件结构

```tsx
import React from 'react'
import type { FC } from 'react'

interface ComponentProps {
  // Props 定义
}

export const Component: FC<ComponentProps> = ({ prop1, prop2 }) => {
  // 组件逻辑
  return (
    // JSX
  )
}
```

## 组件组织

1. 导入声明
2. 类型/接口定义
3. 常量定义
4. 组件定义
5. 辅助函数
6. 样式（如果是组件特定的）

## 最佳实践

1. 保持组件小巧且职责单一
2. 使用组合而非继承
3. 实现适当的错误边界
4. 对回调和昂贵计算进行记忆化
5. 使用正确的 prop 类型和验证

## 组件分类

- **原子组件**：基础构建块（按钮、输入框）
- **分子组件**：原子组件的简单组合
- **有机体组件**：复杂 UI 组件
- **模板组件**：页面布局
- **页面组件**：路由组件

## 性能指南

1. 对纯组件使用 React.memo()
2. 在 useEffect 中实现适当的清理
3. 避免不必要的重渲染
4. 对大型组件使用懒加载
5. 优化图片和资源

## 可访问性

1. 使用语义化 HTML 元素
2. 包含适当的 ARIA 属性
3. 确保键盘导航
4. 保持适当的颜色对比度
5. 进行屏幕阅读器测试
