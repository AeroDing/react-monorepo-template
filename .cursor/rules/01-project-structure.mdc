---
description: 
globs: 
alwaysApply: true
---
# 项目结构指南

## Monorepo 结构

本项目采用 Monorepo 架构，结构如下：

- `app/`: 包含所有应用程序代码
  - `app-site/`: 主要 Web 应用
- `packages/`: 共享包和库
- `node_modules/`: 依赖项（请勿直接编辑）

## 关键文件

- [package.json](mdc:package.json): 根包配置
- [pnpm-workspace.yaml](mdc:pnpm-workspace.yaml): 工作区配置
- [eslint.config.js](mdc:eslint.config.js): ESLint 配置

## 应用程序结构

主应用（`app-site`）遵循以下结构：
- `src/`: 源代码
  - `components/`: 可复用的 React 组件
  - `layouts/`: 页面布局和模板
  - `pages/`: 页面组件
  - `hooks/`: 自定义 React hooks
  - `utils/`: 工具函数
  - `types/`: TypeScript 类型定义
  - `styles/`: 全局样式和主题配置

## 最佳实践

1. 相关代码保持紧密
2. 使用从工作区根目录开始的绝对导入
3. 保持应用和包代码的清晰分离
4. 遵循既定的目录结构
5. 将共享代码放在 `packages/` 中
